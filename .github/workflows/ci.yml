name: CI (lint + publish)

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
    paths:
      - "**/*.py"
      - "pyproject.toml"
      - "poetry.lock"
      - "requirements*.txt"
      - ".ruff.toml"
      - "Dockerfile"
      - "docker/**"
      - ".github/workflows/ci.yml"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  IMAGE: ghcr.io/${{ github.repository }}

jobs:
  ruff:
    name: Ruff checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Ruff lint
        uses: astral-sh/ruff-action@v3
        with:
          args: check --output-format=github

      - name: Ruff format (verify no diffs)
        uses: astral-sh/ruff-action@v3
        with:
          args: format --check

  build_and_push:
    name: Build & push image to GHCR
    runs-on: ubuntu-latest
    needs: ruff
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=sha,format=short,prefix=sha-
          flavor: |
            latest=auto
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version={{version}}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push (single-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
