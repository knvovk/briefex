services:
  db:
    image: postgres:16
    container_name: briefex_db
    restart: always
    env_file:
      - src/briefex/config/.env
    ports:
      - "5434:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8-alpine
    container_name: briefex_redis
    restart: always
    command: [ "redis-server", "--appendonly", "yes" ]
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 10

  celery_worker:
    build: .
    container_name: briefex_celery_worker
    restart: always
    env_file:
      - src/briefex/config/.env
    environment:
      PYTHONPATH: /app/src
    command: >
      celery -A briefex.worker worker
      --loglevel=INFO
      --events
      --concurrency=2
      --prefetch-multiplier=1
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - .:/app

  celery_beat:
    build: .
    container_name: briefex_celery_beat
    restart: always
    env_file:
      - src/briefex/config/.env
    environment:
      PYTHONPATH: /app/src
    command: >
      celery -A briefex.worker beat
      --loglevel=INFO
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - .:/app

  flower:
    build: .
    container_name: briefex_flower
    restart: always
    env_file:
      - src/briefex/config/.env
    environment:
      PYTHONPATH: /app/src
    command: >
      celery -A briefex.worker flower
      --port=5555
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy

volumes:
  db_data:
    name: briefex_db_data
  redis_data:
    name: briefex_redis_data
