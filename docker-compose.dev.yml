x-common-env: &common-env
  env_file:
    - .env
  environment:
    PYTHONPATH: /app/src

x-common-logging: &common-logging
  logging:
    driver: "local"
    options:
      max-size: "10m"
      max-file: "3"

networks:
  internal:
    internal: true
  admin: { }
  public: { }

volumes:
  db_data:
  redis_data:

services:
  db:
    image: postgres:16
    restart: always
    <<: *common-logging
    env_file:
      - .env
    environment:
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5434:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: [ admin, internal ]

  redis:
    image: redis:7-alpine
    restart: always
    <<: *common-logging
    command: [ "redis-server", "--appendonly", "yes", "--appendfsync", "everysec" ]
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks: [ internal ]

  celery_worker:
    build: .
    restart: always
    <<: [ *common-env, *common-logging ]
    init: true
    command: >
      celery -A ${CELERY_APP} worker
      --loglevel=${CELERY_LOGLEVEL:-INFO}
      --concurrency=${CELERY_CONCURRENCY:-2}
      --prefetch-multiplier=${CELERY_PREFETCH:-1}
      --hostname=worker@%h
      --pidfile=/tmp/celery.pid
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    networks: [ internal, public ]
    stop_grace_period: 30s
    healthcheck:
      test: [ "CMD-SHELL", "test -s /tmp/celery.pid && kill -0 $(cat /tmp/celery.pid)" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  celery_beat:
    build: .
    restart: always
    <<: [ *common-env, *common-logging ]
    init: true
    command: >
      sh -lc 'celery -A ${CELERY_APP} beat
      --loglevel=${CELERY_LOGLEVEL:-INFO}
      --schedule=/tmp/celerybeat-schedule
      --pidfile=/tmp/celerybeat.pid'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    networks: [ internal ]
    stop_grace_period: 30s
    healthcheck:
      test: [ "CMD-SHELL",
              "test -s /tmp/celerybeat.pid && kill -0 $(cat /tmp/celerybeat.pid)"
      ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s

  flower:
    build: .
    restart: always
    <<: [ *common-env, *common-logging ]
    command: >
      celery -A ${CELERY_APP} flower
      --port=5555
      --basic-auth=${FLOWER_USER}:${FLOWER_PASSWORD}
    ports:
      - "127.0.0.1:5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    networks: [ admin, internal ]
