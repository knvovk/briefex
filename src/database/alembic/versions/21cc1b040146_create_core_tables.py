"""create core tables

Revision ID: 21cc1b040146
Revises: 0001_pgvector
Create Date: 2025-06-14 13:31:19.763899

"""

from typing import Sequence, Union

import pgvector.sqlalchemy.vector
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "21cc1b040146"
down_revision: Union[str, None] = "0001_pgvector"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto-generated by Alembic - please adjust! ###
    op.create_table(
        "sources",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("code_name", sa.String(length=64), nullable=False),
        sa.Column(
            "type",
            sa.Enum("HTML", "RSS", name="source_type_enum"),
            nullable=False,
        ),
        sa.Column("url", sa.String(length=2048), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code_name"),
        sa.UniqueConstraint("url", name="uq_sources_url"),
    )
    op.create_index(
        "ix_sources_code_lower",
        "sources",
        [sa.literal_column("code_name DESC")],
        unique=False,
    )
    op.create_index(op.f("ix_sources_type"), "sources", ["type"], unique=False)

    op.create_table(
        "posts",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("title", sa.String(length=512), nullable=False),
        sa.Column("canonical_url", sa.String(length=2048), nullable=False),
        sa.Column("summary", sa.String(), nullable=False),
        sa.Column(
            "embedding",
            pgvector.sqlalchemy.vector.VECTOR(dim=768),
            nullable=True,
        ),
        sa.Column("text_hash", sa.BigInteger(), nullable=False),
        sa.Column("published_at", postgresql.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("source_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["source_id"], ["sources.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("canonical_url"),
    )
    op.create_index(
        "ix_posts_embedding",
        "posts",
        ["embedding"],
        unique=False,
        postgresql_using="ivfflat",
    )
    op.create_index(op.f("ix_posts_text_hash"), "posts", ["text_hash"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto-generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_posts_text_hash"), table_name="posts")
    op.drop_index("ix_posts_embedding", table_name="posts", postgresql_using="ivfflat")
    op.drop_table("posts")

    op.drop_index(op.f("ix_sources_type"), table_name="sources")
    op.drop_index("ix_sources_code_lower", table_name="sources")
    op.drop_table("sources")
    # ### end Alembic commands ###
